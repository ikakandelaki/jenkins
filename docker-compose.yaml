services:
  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker
    privileged: true
    networks:
      - jenkins
    environment:
      DOCKER_TLS_CERTDIR: "/certs"
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    ports:
      - "2376:2376"
    restart: always

  jenkins:
    build:
      context: .
      dockerfile: jenkins.Dockerfile
    container_name: jenkins
    restart: on-failure
    networks:
      - jenkins
    environment:
      DOCKER_HOST: "tcp://jenkins-docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: "1"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    ports:
      - "8080:8080"
      - "50000:50000"
    depends_on:
      - jenkins-docker

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    restart: always
    networks:
      - jenkins
    ports:
      - "8081:8081"
    volumes:
      - nexus-data:/nexus-data

  sonarqube:
    image: sonarqube
    container_name: sonarqube
    restart: always
    networks:
      - jenkins
    ports:
      - "9000:9000"
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions

networks:
  jenkins:

volumes:
  jenkins-docker-certs:
  jenkins-data:
  nexus-data:
  sonarqube-data:
  sonarqube_logs:
  sonarqube_extensions: